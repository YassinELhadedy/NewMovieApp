apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'
apply plugin: 'kotlin-kapt'
apply plugin: "androidx.navigation.safeargs.kotlin"

def getProperty(String filename, String propName) {
    def propsFile = rootProject.file(filename)
    if (propsFile.exists()) {
        def props = new Properties()
        props.load(new FileInputStream(propsFile))
        if (props[propName] != null) {
            return props[propName]
        } else {
            print("No such property " + propName + " in file " + filename)
        }
    } else {
        print(filename + " does not exist!")
    }
}

android {
    compileSdkVersion 29
    buildToolsVersion "29.0.3"

    defaultConfig {
        applicationId "com.swvl.moviesdmb"
        minSdkVersion 16
        targetSdkVersion 29
        versionCode 1
        versionName "1.0"
        multiDexEnabled true


        buildConfigField "String", "TMDB_API_KEY", "\"${getProperty("local.properties", "tmdb_api_key")}\""
        buildConfigField "String", "TMDB_BASE_URL", "\"https://api.themoviedb.org/\""
        buildConfigField "String", "TMDB_PHOTO_BASE_URL", "\"https://image.tmdb.org/t/p/w185\""
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    kotlinOptions {
        jvmTarget = JavaVersion.VERSION_1_8.toString()
    }

    dataBinding {
        enabled = true
        enabledForTests = true
    }
    testOptions {
        unitTests.returnDefaultValues = true
        animationsDisabled = true
    }

    // Always show the result of every unit test when running via command line, even if it passes.
    testOptions.unitTests {
        includeAndroidResources = true
        returnDefaultValues = true
    }
    packagingOptions {
        exclude 'META-INF/AL2.0'
        exclude 'META-INF/main.kotlin_module'
        exclude 'META-INF/LGPL2.1'
        exclude 'META-INF/DEPENDENCIES'
    }
}

ext {
    okhttpVersion = '4.6.0'
    glideVersion = '4.11.0'
    retrofitVersion = '2.8.1'
    jsonVersion = '2.8.6'
    rxRetrofitVersion = '2.6.2'
    espressoVersion = '3.2.0'
    coroutinesVersion = '1.3.7'
    koinVersion = '2.0.1'
    navigationVersion = '2.3.0'
    robolectricVersion = '4.3.1'
    readMoreTextVersion = '2.1.0'
    mockitoVersion = '3.3.3'
    coroutinesTestVersion = '1.3.7'
    hamcrestVersion = '1.3'
    androidXArchTestVersion = '2.1.0'
    junitVersion = '4.13'
    dexMakerVersion = '2.12.1'
    androidXCoreVersion = "1.2.0"
    fragmentVersion = '1.3.0-alpha07'
    androidXTestCoreVersion = '1.3.0-rc03'
    recyclerViewVersion = '1.2.0-alpha05'
    androidXTestExtKotlinRunnerVersion = '1.1.1'
    espressoVersion = '3.3.0-rc03'
    archTestingVersion = '2.1.0'
    pagingVersion = '3.0.0-alpha04'

}

dependencies {
    implementation fileTree(dir: "libs", include: ["*.jar"])
    implementation "org.jetbrains.kotlin:kotlin-stdlib:$kotlin_version"
    implementation 'androidx.core:core-ktx:1.3.1'
    implementation 'androidx.appcompat:appcompat:1.2.0'
    implementation 'androidx.legacy:legacy-support-v4:1.0.0'
    implementation 'androidx.recyclerview:recyclerview:1.1.0'
    implementation 'com.google.android.material:material:1.2.0'
    implementation 'androidx.constraintlayout:constraintlayout:1.1.3'
    testImplementation "junit:junit:${junitVersion}"
    androidTestImplementation 'androidx.test.ext:junit:1.1.1'
    androidTestImplementation "androidx.test.espresso:espresso-core:${espressoVersion}"

    //Recyclerview
    implementation "androidx.recyclerview:recyclerview:$recyclerViewVersion"

    //Retrofit
    implementation "com.squareup.retrofit2:retrofit:${retrofitVersion}"
    implementation "com.squareup.retrofit2:converter-gson:${retrofitVersion}"
    implementation "com.google.code.gson:gson:${jsonVersion}"
    implementation "com.squareup.retrofit2:adapter-rxjava2:${rxRetrofitVersion}"
    implementation 'com.android.support:multidex:1.0.3'

    // Network
    implementation "com.squareup.okhttp3:okhttp:${okhttpVersion}"
    implementation "com.squareup.okhttp3:logging-interceptor:${okhttpVersion}"
    implementation "com.github.bumptech.glide:glide:${glideVersion}"

    //Coroutines
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-android:${coroutinesVersion}"

    // Dependency Injection
    // Koin for Android
    implementation "org.koin:koin-android:${koinVersion}"
    // implementation "org.koin:koin-core:$koin_version"
    implementation "org.koin:koin-androidx-scope:${koinVersion}"
    // or Koin for Android Architecture ViewModel
    implementation "org.koin:koin-androidx-viewmodel:${koinVersion}"

    //Navigation Component
    implementation "androidx.navigation:navigation-fragment-ktx:${navigationVersion}"
    implementation "androidx.navigation:navigation-ui-ktx:${navigationVersion}"

    //LifeCycle
    implementation 'androidx.lifecycle:lifecycle-common:2.2.0'
    implementation 'androidx.lifecycle:lifecycle-runtime:2.2.0'
    implementation 'android.arch.lifecycle:extensions:2.2.0'
    implementation 'androidx.lifecycle:lifecycle-livedata-ktx:2.2.0'

    //Room ORM
    implementation "androidx.room:room-runtime:2.2.5"
    kapt "androidx.room:room-compiler:2.2.5"
    implementation "androidx.room:room-ktx:2.2.5"

    //Paging
    implementation "androidx.paging:paging-runtime:$pagingVersion"

    // Read More Textview
    implementation "com.borjabravo:readmoretextview:${readMoreTextVersion}"


    // Dependencies for local unit tests
    // Required -- JUnit 4 framework
    testImplementation "junit:junit:${junitVersion}"
    // Optional -- Robolectric environment
    testImplementation "androidx.test:core:${androidXCoreVersion}"
    // Optional -- Mockito framework
    testImplementation "org.mockito:mockito-core:${mockitoVersion}"
    testImplementation "org.robolectric:robolectric:${robolectricVersion}"
    testImplementation "org.jetbrains.kotlinx:kotlinx-coroutines-test:${coroutinesTestVersion}"
    testImplementation "org.hamcrest:hamcrest-all:${hamcrestVersion}"
    testImplementation "androidx.arch.core:core-testing:${androidXArchTestVersion}"

    // Dependencies for Android instrumented unit tests
    androidTestImplementation "junit:junit:${junitVersion}"
    androidTestImplementation "org.mockito:mockito-core:$mockitoVersion"
    androidTestImplementation "com.linkedin.dexmaker:dexmaker-mockito:$dexMakerVersion"
    androidTestImplementation "org.jetbrains.kotlinx:kotlinx-coroutines-test:$coroutinesVersion"

    // Testing code should not be included in the main code.
    // Once https://issuetracker.google.com/128612536 is fixed this can be fixed.
    debugImplementation "androidx.fragment:fragment-testing:$fragmentVersion"
    implementation "androidx.test:core:$androidXTestCoreVersion"

    // AndroidX Test - Instrumented testing
    androidTestImplementation "androidx.test.ext:junit:$androidXTestExtKotlinRunnerVersion"
    androidTestImplementation "androidx.test.espresso:espresso-core:$espressoVersion"
    androidTestImplementation "androidx.test.espresso:espresso-contrib:$espressoVersion"
    androidTestImplementation "androidx.arch.core:core-testing:$archTestingVersion"
    androidTestImplementation "org.jetbrains.kotlinx:kotlinx-coroutines-test:$coroutinesVersion"
    implementation "androidx.test.espresso:espresso-idling-resource:$espressoVersion"
}